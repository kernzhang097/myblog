{"remainingRequest":"/Users/kernzhang/Desktop/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kernzhang/Desktop/blog/src/views/admin/components/AdminBreadCrumb.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kernzhang/Desktop/blog/src/views/admin/components/AdminBreadCrumb.vue","mtime":1575443920593},{"path":"/Users/kernzhang/Desktop/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kernzhang/Desktop/blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kernzhang/Desktop/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kernzhang/Desktop/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQWRtaW5CcmVhZENydW1iJywKICBwcm9wczogewogICAgcGF0aExpc3Q6IHsKICAgICAgdHlwZTogQXJyYXkKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsaXN0OiBbXQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMubGlzdCA9IHRoaXMucGF0aExpc3QubWFwKHYgPT4gewogICAgICByZXR1cm4gewogICAgICAgIG5hbWU6IHYubWV0YS5uYXZOYW1lLAogICAgICAgIHBhdGg6IHYucGF0aCwKICAgICAgICBpc1ZpZXc6IHYubWV0YS5pc1ZpZXcgfHwgZmFsc2UKICAgICAgfQogICAgfSkKICB9Cn0K"},{"version":3,"sources":["AdminBreadCrumb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AdminBreadCrumb.vue","sourceRoot":"src/views/admin/components","sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item\n        v-for=\"(item, index) in list\"\n        :key=\"index\"\n        :to=\"\n          item.isView || index == list.length - 1 ? false : { path: item.path }\n        \"\n      >\n        {{ item.name }}\n      </el-breadcrumb-item>\n    </el-breadcrumb>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AdminBreadCrumb',\n  props: {\n    pathList: {\n      type: Array\n    }\n  },\n  data() {\n    return {\n      list: []\n    }\n  },\n  mounted() {\n    this.list = this.pathList.map(v => {\n      return {\n        name: v.meta.navName,\n        path: v.path,\n        isView: v.meta.isView || false\n      }\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\"></style>\n"]}]}